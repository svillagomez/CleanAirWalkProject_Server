__author__ = 'santiago'
from matplotlib.path import Path
import matplotlib.pyplot as plt
import numpy as np

fig = plt.figure()

# source = open("/home/santiago/Downloads/Singapore/suburbs/results.txt")

yishun = [
(-37.806170,144.955022),
(-37.805824,144.955076),
(-37.805824,144.955076),
(-37.805797,144.955078),
(-37.805766,144.955083),
(-37.805728,144.955090),
(-37.805728,144.955090),
(-37.805524,144.955126),
(-37.805524,144.955126),
(-37.805266,144.955172),
(-37.805266,144.955172),
(-37.804945,144.955229),
(-37.804945,144.955229),
(-37.804569,144.955295),
(-37.804569,144.955295),
(-37.804271,144.955348),
(-37.804271,144.955348),
(-37.803744,144.955441),
(-37.803744,144.955441),
(-37.803654,144.955463),
(-37.803654,144.955463),
(-37.803511,144.955487),
(-37.803511,144.955487),
(-37.803331,144.955505),
(-37.803331,144.955505),
(-37.803274,144.955634),
(-37.803274,144.955634),
(-37.803154,144.955527),
(-37.803154,144.955527),
(-37.803108,144.955576),
(-37.803108,144.955576),
(-37.803097,144.955642),
(-37.803097,144.955642),
(-37.802658,144.955719),
(-37.802658,144.955719),
(-37.802353,144.955773),
(-37.802353,144.955773),
(-37.802039,144.956216),
(-37.802039,144.956216),
(-37.801919,144.956372),
(-37.801919,144.956372),
(-37.801907,144.956559),
(-37.801907,144.956559),
(-37.801292,144.956674),
(-37.801292,144.956674),
(-37.801193,144.956699),
(-37.801193,144.956699),
(-37.800789,144.957086),
(-37.800789,144.957086),
(-37.799749,144.957492),
(-37.799749,144.957492),
(-37.799759,144.957611),
(-37.799759,144.957611),
(-37.799770,144.957733),
(-37.799770,144.957733),
(-37.799783,144.957863),
(-37.799783,144.957863),
(-37.799811,144.958342),
(-37.799811,144.958342),
(-37.799861,144.958810),
(-37.799861,144.958810),
(-37.799972,144.959842),
(-37.799972,144.959842),
(-37.800036,144.960447),
(-37.800036,144.960447),
(-37.800046,144.960536),
(-37.800046,144.960536),
(-37.800056,144.960630),
(-37.800056,144.960630),
(-37.800103,144.961072),
(-37.800103,144.961072),
(-37.800148,144.961491),
(-37.800148,144.961491),
(-37.800176,144.961752),
(-37.800176,144.961752),
(-37.800243,144.962378),
(-37.800243,144.962378),
(-37.800251,144.962429),
(-37.800251,144.962429),
(-37.800260,144.962533),
(-37.800260,144.962533),
(-37.800146,144.962552),
(-37.800146,144.962552),
(-37.800149,144.962581),
(-37.800149,144.962581),
(-37.800263,144.963575),
(-37.800263,144.963575),
(-37.800371,144.963878),
(-37.800371,144.963878),
(-37.799825,144.963974),
(-37.799825,144.963974),
(-37.799597,144.964014),
(-37.799597,144.964014),
(-37.799352,144.964057),
(-37.799352,144.964057),
(-37.798611,144.964187),
(-37.798611,144.964187),
(-37.798516,144.964204),
(-37.798516,144.964204),
(-37.798515,144.964247),
(-37.798515,144.964247),
(-37.798516,144.964279),
(-37.798516,144.964279),
(-37.798517,144.964311),
(-37.798517,144.964311),
(-37.798518,144.964344),
(-37.798518,144.964344),
(-37.798516,144.964372),
(-37.798516,144.964372),
(-37.798432,144.964384),
(-37.798432,144.964384),
(-37.798554,144.965681),
(-37.798554,144.965681),
(-37.798414,144.965724),
(-37.798414,144.965724),
(-37.798168,144.965805),
(-37.798168,144.965805),
(-37.797919,144.965850),
(-37.797919,144.965850),
(-37.797823,144.965867),
(-37.797823,144.965867),
(-37.797835,144.965973),
(-37.797835,144.965973),
(-37.797871,144.966310),
(-37.797871,144.966310),
(-37.797945,144.966974),
(-37.797945,144.966974),
(-37.797988,144.967359),
(-37.797988,144.967359),
(-37.797694,144.967411),
(-37.797694,144.967411),
(-37.797198,144.967564),
(-37.797198,144.967564),
(-37.797111,144.967648),
(-37.797111,144.967648),
(-37.797172,144.968210),
(-37.797172,144.968210),
(-37.797253,144.968959),



























    # add first point
]

suburb = yishun

xs = []
ys = []

# for item in source:
#     coordinates = item.split()
#     print(float(coordinates[0]))
    # xs.append(float(coordinates[0]))
    # ys.append(float(coordinates[1]))


    # print(item)



xs = [x[0] for x in suburb]
ys = [x[1] for x in suburb]


print("total = %d"% (len(xs)))

p_xs = []
p_ys = []

def uniqueish_color():
    """There're better ways to generate unique colors, but this isn't awful."""
    return plt.cm.gist_ncar(np.random.random())
contador = 0
for iterator in range(0, len(xs)-1,2):
    p_xs.append(xs[iterator])
    p_ys.append(ys[iterator])
    p_xs.append(xs[iterator+1])
    p_ys.append(ys[iterator+1])
    plt.annotate(iterator, xy=(ys[iterator], xs[iterator]), xytext=(ys[iterator], xs[iterator]),size=14)
    # plt.scatter(ys, xs)
    plt.plot([ys[iterator],ys[iterator+1]],[xs[iterator],xs[iterator+1]],'k-',lw=4,color=uniqueish_color())

plt.show()

path = Path(suburb)
point = (1.414594, 103.822555)

isInside = path.contains_point(point)
print(isInside)

# fig.show()